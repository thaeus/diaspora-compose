version: '2'
services:
  sandiego.social.dockerfully.com:
    container_name: sandiego.social.dockerfully.com
    image: dockerfully/diaspora:latest 
    build:
      context: ../
    links:
      - postgres-2
      - redis-2
    volumes:
      - diaspora-images-2:/home/diaspora/diaspora/public/uploads/images
      - ./diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:ro
      - ./database.yml:/home/diaspora/diaspora/config/database.yml:ro
    ports:
      - '3050:3050'
    restart: always
    environment:
      - VIRTUAL_HOST=sandiego.social.dockerfully.com
      - LETSENCRYPT_HOST=sandiego.social.dockerfully.com
    networks:
      - mongonet
    restart: always




  postgres-2:
    container_name: postgres-2
    read_only: false
    mem_limit: 8G
    image: 'bitnami/postgresql:11'
    build:
      context: ../postgresql
    tmpfs:
    - /tmp
    ports:
      - '5430:5430'
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
      - 'postgres-2:/var/lib/postgresql/data'
      - 'postgres-run-2:/var/run/postgresql'
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
#      - 'POSTGRES_PASSWORD=somepassword123'
      - 'POSTGRES_DATABASE=diaspora_production'
      - 'POSTGRES_USERNAME=diaspora'
      - 'POSTGRESQL_PORT_NUMBER=5430'
    restart: always
    networks:
      - mongonet



  redis-2:
    container_name: redis-2
    image: dockerfully/redis:latest
    build:
      context: ../redis/5.0
    mem_limit: 384M
    read_only: false
    tmpfs:
    - /tmp
    command: redis-server --port 6389 --appendonly yes
    volumes:
      - redis-2:/data
    restart: always
    networks:
      - mongonet



volumes:
  diaspora-images-2:
  postgres-2:
  postgres-run-2:
  redis-2:
  postgresql_data:
    driver: local


networks:
  mongonet:
    external: true
